export class BsonObjectId {
    timestamp;
    process;
    counter;
    constructor(timestamp, process, counter) {
        this.timestamp = timestamp;
        this.process = process;
        this.counter = counter;
    }
}
export class BsonDbPointer {
    name;
    id;
    constructor(name, id) {
        this.name = name;
        this.id = id;
    }
}
export class BsonJavascriptCode {
    code;
    constructor(code) {
        this.code = code;
    }
}
export class BsonSymbol {
    symbol;
    constructor(symbol) {
        this.symbol = symbol;
    }
}
export class BsonJavascriptCodeWithScope {
    code;
    scope;
    constructor(code, scope) {
        this.code = code;
        this.scope = scope;
    }
}
export class BsonInt32 {
    value;
    constructor(value) {
        this.value = value;
    }
}
export class BsonInt64 {
    value;
    constructor(value) {
        this.value = value;
    }
}
export class BsonFloat {
    value;
    constructor(value) {
        this.value = value;
    }
}
export class BsonTimestamp {
    increment;
    timestamp;
    constructor(increment, timestamp) {
        this.increment = increment;
        this.timestamp = timestamp;
    }
}
export class BsonDecimal128 {
    data;
    constructor(data) {
        this.data = data;
    }
}
export class BsonMinKey {
}
export class BsonMaxKey {
}
export class BsonBinary {
    subtype;
    data;
    constructor(subtype, data) {
        this.subtype = subtype;
        this.data = data;
    }
}
