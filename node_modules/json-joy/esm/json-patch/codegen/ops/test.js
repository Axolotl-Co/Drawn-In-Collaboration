import { $$find } from '../../../json-pointer/codegen/find';
import { $$deepEqual } from '../../../json-equal/$$deepEqual';
import { compileClosure } from '../../../util/codegen';
import { predicateOpWrapper } from '../util';
export const $$test = (op) => {
    const js = `
(function(wrapper){
  var find = ${$$find(op.path)};
  var deepEqual = ${$$deepEqual(op.value)};
  return wrapper(function(doc){
    var val = find(doc);
    if (val === undefined) return ${op.not ? 'true' : 'false'};
    return ${op.not ? '!' : ''}deepEqual(val);
  });
})`;
    return {
        deps: [predicateOpWrapper],
        js: js,
    };
};
export const $test = (op) => compileClosure($$test(op));
