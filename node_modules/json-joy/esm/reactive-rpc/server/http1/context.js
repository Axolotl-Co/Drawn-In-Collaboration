import { getBody } from './util';
import { listToUint8 } from '../../../util/buffers/concat';
export class Http1ConnectionContext {
    req;
    res;
    path;
    query;
    ip;
    token;
    params;
    meta;
    reqCodec;
    resCodec;
    msgCodec;
    constructor(req, res, path, query, ip, token, params, meta, reqCodec, resCodec, msgCodec) {
        this.req = req;
        this.res = res;
        this.path = path;
        this.query = query;
        this.ip = ip;
        this.token = token;
        this.params = params;
        this.meta = meta;
        this.reqCodec = reqCodec;
        this.resCodec = resCodec;
        this.msgCodec = msgCodec;
    }
    async body(maxPayload) {
        const list = await getBody(this.req, maxPayload);
        const bodyUint8 = listToUint8(list);
        return bodyUint8;
    }
}
export class WsConnectionContext {
    connection;
    path;
    query;
    ip;
    token;
    params;
    meta;
    reqCodec;
    resCodec;
    msgCodec;
    constructor(connection, path, query, ip, token, params, meta, reqCodec, resCodec, msgCodec) {
        this.connection = connection;
        this.path = path;
        this.query = query;
        this.ip = ip;
        this.token = token;
        this.params = params;
        this.meta = meta;
        this.reqCodec = reqCodec;
        this.resCodec = resCodec;
        this.msgCodec = msgCodec;
    }
}
