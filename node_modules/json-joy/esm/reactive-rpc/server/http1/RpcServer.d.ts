/// <reference types="node" />
import * as http from 'http';
import { Printable } from '../../../util/print/types';
import { Http1Server } from './Http1Server';
import { RpcMessageBatchProcessor } from '../../common';
import { ConnectionContext } from './context';
import type { RpcCaller } from '../../common/rpc/caller/RpcCaller';
import type { ServerLogger } from './types';
export interface RpcServerOpts {
    http1: Http1Server;
    caller: RpcCaller<any>;
    logger?: ServerLogger;
}
export interface RpcServerStartOpts extends Omit<RpcServerOpts, 'http1'> {
    port?: number;
    server?: http.Server;
}
export declare class RpcServer implements Printable {
    protected readonly opts: RpcServerOpts;
    static readonly create: (opts: RpcServerOpts) => RpcServer;
    static readonly startWithDefaults: (opts: RpcServerStartOpts) => RpcServer;
    readonly http1: Http1Server;
    protected readonly batchProcessor: RpcMessageBatchProcessor<ConnectionContext>;
    constructor(opts: RpcServerOpts);
    enableHttpPing(): void;
    enableCors(): void;
    enableHttpRpc(path?: string): void;
    enableWsRpc(path?: string): void;
    enableDefaults(): void;
    toString(tab?: string): string;
}
