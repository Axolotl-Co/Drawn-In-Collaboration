export const edit = ({ t, services }) => (r) => {
    const PatchType = t.Ref('BlockPatch');
    const Request = t.Object(t.prop('id', t.Ref('BlockId')).options({
        title: 'Document ID',
        description: 'The ID of the document to apply the patch to.',
    }), t.prop('patches', t.Array(PatchType)).options({
        title: 'Patches',
        description: 'The patches to apply to the document.',
    }));
    const Response = t.Object(t.prop('patches', t.Array(PatchType)).options({
        title: 'Latest patches',
        description: 'The list of patches that the client might have missed and should apply to the document.',
    }));
    const Func = t.Function(Request, Response).options({
        title: 'Edit Block',
        intro: 'Applies patches to an existing block.',
        description: 'Applies patches to an existing document and returns the latest concurrent changes.',
    });
    return r.prop('blocks.edit', Func, async ({ id, patches }) => {
        const res = await services.blocks.edit(id, patches);
        return {
            patches: res.patches,
        };
    });
};
