import { routes } from './routes';
import { RpcError } from '../../reactive-rpc/common/rpc/caller';
import { RpcValue } from '../../reactive-rpc/common/messages/Value';
import { ObjectValueCaller } from '../../reactive-rpc/common/rpc/caller/ObjectValueCaller';
import { system } from './system';
import { ObjectValue } from '../../json-type-value/ObjectValue';
export const createRouter = (services) => {
    const router = ObjectValue.create(system);
    const deps = {
        services,
        router,
        system,
        t: system.t,
    };
    return routes(deps)(router);
};
export const createCaller = (services) => {
    const router = createRouter(services);
    const caller = new ObjectValueCaller({
        router,
        wrapInternalError: (error) => {
            if (error instanceof RpcValue)
                return error;
            if (error instanceof RpcError)
                return RpcError.value(error);
            console.error(error);
            return RpcError.valueFrom(error);
        },
    });
    return { router, caller };
};
