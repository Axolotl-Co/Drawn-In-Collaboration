import { type ResolveType } from '../../../json-type';
export type TBlockId = ResolveType<typeof BlockId>;
export declare const BlockId: import("../../../json-type").StringType;
export type TBlockSeq = ResolveType<typeof BlockSeq>;
export declare const BlockSeq: import("../../../json-type").NumberType;
export type TBlock = ResolveType<typeof Block>;
export declare const Block: import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"id", import("../../../json-type").RefType<import("../../../json-type").StringType>>, import("../../../json-type").ObjectFieldType<"seq", import("../../../json-type").RefType<import("../../../json-type").NumberType>>, import("../../../json-type").ObjectFieldType<"created", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"updated", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"blob", import("../../../json-type").BinaryType<import("../../../json-type").AnyType>>]>;
export type TBlockPatch = ResolveType<typeof BlockPatch>;
export declare const BlockPatch: import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"seq", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"created", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"blob", import("../../../json-type").BinaryType<import("../../../json-type").AnyType>>]>;
