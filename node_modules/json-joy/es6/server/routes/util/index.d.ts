import type { RouteDeps, Router, RouterBase } from '../types';
export declare const ping: ({ t }: RouteDeps) => <R extends RouterBase>(r: Router<R>) => import("../../../json-type-value/ObjectValue").ObjectValue<import("../../../json-type").ObjectType<[...import("../../../json-type-value/ObjectValue").UnObjectType<R>, import("../../../json-type").ObjectFieldType<"util.ping", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").ConstType<"pong">>>]>>;
export declare const echo: ({ t }: RouteDeps) => <R extends RouterBase>(r: Router<R>) => import("../../../json-type-value/ObjectValue").ObjectValue<import("../../../json-type").ObjectType<[...import("../../../json-type-value/ObjectValue").UnObjectType<R>, import("../../../json-type").ObjectFieldType<"util.echo", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").AnyType>>]>>;
export declare const info: ({ t, services }: RouteDeps) => <R extends RouterBase>(r: Router<R>) => import("../../../json-type-value/ObjectValue").ObjectValue<import("../../../json-type").ObjectType<[...import("../../../json-type-value/ObjectValue").UnObjectType<R>, import("../../../json-type").ObjectFieldType<"util.info", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"now", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"stats", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"pubsub", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"channels", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"observers", import("../../../json-type").NumberType>]>>, import("../../../json-type").ObjectFieldType<"presence", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"rooms", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"entries", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"observers", import("../../../json-type").NumberType>]>>, import("../../../json-type").ObjectFieldType<"blocks", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"blocks", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"patches", import("../../../json-type").NumberType>]>>]>>]>>>]>>;
export declare const schema: ({ t, router }: RouteDeps) => <R extends RouterBase>(r: Router<R>) => import("../../../json-type-value/ObjectValue").ObjectValue<import("../../../json-type").ObjectType<[...import("../../../json-type-value/ObjectValue").UnObjectType<R>, import("../../../json-type").ObjectFieldType<"util.schema", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"typescript", import("../../../json-type").StringType>]>>>]>>;
export declare const util: (d: RouteDeps) => <R extends RouterBase>(r: Router<R>) => import("../../../json-type-value/ObjectValue").ObjectValue<import("../../../json-type").ObjectType<[...import("../../../json-type-value/ObjectValue").UnObjectType<R>, import("../../../json-type").ObjectFieldType<"util.schema", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"typescript", import("../../../json-type").StringType>]>>>, import("../../../json-type").ObjectFieldType<"util.info", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"now", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"stats", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"pubsub", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"channels", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"observers", import("../../../json-type").NumberType>]>>, import("../../../json-type").ObjectFieldType<"presence", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"rooms", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"entries", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"observers", import("../../../json-type").NumberType>]>>, import("../../../json-type").ObjectFieldType<"blocks", import("../../../json-type").ObjectType<[import("../../../json-type").ObjectFieldType<"blocks", import("../../../json-type").NumberType>, import("../../../json-type").ObjectFieldType<"patches", import("../../../json-type").NumberType>]>>]>>]>>>, import("../../../json-type").ObjectFieldType<"util.echo", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").AnyType>>, import("../../../json-type").ObjectFieldType<"util.ping", import("../../../json-type").FunctionType<import("../../../json-type").AnyType, import("../../../json-type").ConstType<"pong">>>]>>;
