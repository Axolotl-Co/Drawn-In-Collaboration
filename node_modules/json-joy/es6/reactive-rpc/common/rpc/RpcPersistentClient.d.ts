import { Observable, ReplaySubject } from 'rxjs';
import { StreamingRpcClient, StreamingRpcClientOptions } from './client/StreamingRpcClient';
import { PersistentChannel, PersistentChannelParams } from '../channel';
import type { RpcCodec } from '../codec/RpcCodec';
export interface RpcPersistentClientParams {
    channel: PersistentChannelParams;
    codec: RpcCodec;
    client?: Omit<StreamingRpcClientOptions, 'send'>;
    ping?: number;
    pingMethod?: string;
}
export declare class RpcPersistentClient {
    channel: PersistentChannel;
    rpc?: StreamingRpcClient;
    readonly rpc$: ReplaySubject<StreamingRpcClient>;
    constructor(params: RpcPersistentClientParams);
    call$(method: string, data: unknown | Observable<unknown>): Observable<unknown>;
    call(method: string, data: unknown): Promise<unknown>;
    notify(method: string, data: unknown): void;
    start(): void;
    stop(): void;
}
