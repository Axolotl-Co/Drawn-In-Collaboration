import { Model } from '../model';
import { PatchLog } from './PatchLog';
import { Patch } from '../../json-crdt-patch';
import type * as types from './types';
import type { Printable } from '../../util/print/types';
export declare class File implements Printable {
    readonly model: Model;
    readonly log: PatchLog;
    static unserialize(components: types.FileReadSequence): File;
    static fromNdjson(blob: Uint8Array): File;
    static fromSeqCbor(blob: Uint8Array): File;
    static fromModel(model: Model<any>): File;
    constructor(model: Model, log: PatchLog);
    apply(patch: Patch): void;
    sync(): () => void;
    serialize(params?: types.FileSerializeParams): types.FileWriteSequence;
    toBinary(params: types.FileEncodingParams): Uint8Array;
    toString(tab?: string): string;
}
