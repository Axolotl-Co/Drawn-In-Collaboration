"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const json_crdt_patch_1 = require("../../json-crdt-patch");
const util_1 = require("util");
console.clear();
const schema = json_crdt_patch_1.s.obj({
    id: json_crdt_patch_1.s.con('xyz'),
    text: json_crdt_patch_1.s.str('hello'),
    temperature: json_crdt_patch_1.s.con(36.6),
});
const model = __1.Model.withLogicalClock(1234).setSchema(schema);
console.log(model + '');
console.log(model.root + '');
const encoded = model.toBinary();
console.log(encoded);
const decoded = __1.Model.fromBinary(encoded);
console.log(decoded.root + '');
const Encoder_1 = require("../codec/structural/verbose/Encoder");
const Decoder_1 = require("../codec/structural/verbose/Decoder");
const verboseEncoder = new Encoder_1.Encoder();
const verboseDecoder = new Decoder_1.Decoder();
const verboseEncoded = verboseEncoder.encode(model);
console.log((0, util_1.formatWithOptions)({ depth: 30 }, verboseEncoded));
const verboseDecoded = verboseDecoder.decode(verboseEncoded);
console.log(verboseDecoded.root + '');
const Encoder_2 = require("../codec/structural/compact/Encoder");
const Decoder_2 = require("../codec/structural/compact/Decoder");
const compactEncoder = new Encoder_2.Encoder();
const compactDecoder = new Decoder_2.Decoder();
const compactEncoded = compactEncoder.encode(model);
console.log((0, util_1.formatWithOptions)({ depth: 30 }, compactEncoded));
const compactDecoded = compactDecoder.decode(compactEncoded);
console.log(compactDecoded.root + '');
const Encoder_3 = require("../codec/indexed/binary/Encoder");
const Decoder_3 = require("../codec/indexed/binary/Decoder");
const indexedEncoder = new Encoder_3.Encoder();
const indexedDecoder = new Decoder_3.Decoder();
const indexedEncoded = indexedEncoder.encode(model);
console.log((0, util_1.formatWithOptions)({ depth: 30 }, indexedEncoded));
const indexedDecoded = indexedDecoder.decode(indexedEncoded);
console.log(indexedDecoded.root + '');
const Encoder_4 = require("../codec/sidecar/binary/Encoder");
const Decoder_4 = require("../codec/sidecar/binary/Decoder");
const sidecarEncoder = new Encoder_4.Encoder();
const sidecarDecoder = new Decoder_4.Decoder();
const [view, sidecar] = sidecarEncoder.encode(model);
console.log((0, util_1.formatWithOptions)({ depth: 30 }, sidecar));
const sidecarDecoded = sidecarDecoder.decode(model.view(), sidecar);
console.log(sidecarDecoded.root + '');
