import type { RouteDeps } from './types';
import type { ObjectValue } from '../../json-type-value/ObjectValue';
import type { ObjectType } from '../../json-type';
export declare const routes: (d: RouteDeps) => <R extends ObjectType<any>>(r: ObjectValue<R>) => ObjectValue<ObjectType<[...import("../../json-type-value/ObjectValue").UnObjectType<R>, import("../../json-type").ObjectFieldType<"blocks.history", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>, import("../../json-type").ObjectFieldType<"max", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"min", import("../../json-type").NumberType>]>, ObjectType<[import("../../json-type").ObjectFieldType<"patches", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"seq", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>>]>>>, import("../../json-type").ObjectFieldType<"blocks.listen", import("../../json-type").FunctionStreamingType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>]>, ObjectType<[import("../../json-type").ObjectOptionalFieldType<"deleted", import("../../json-type").BooleanType>, import("../../json-type").ObjectOptionalFieldType<"block", import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>, import("../../json-type").ObjectFieldType<"seq", import("../../json-type").RefType<import("../../json-type").NumberType>>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"updated", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>, import("../../json-type").ObjectOptionalFieldType<"patches", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"seq", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>>]>>>, import("../../json-type").ObjectFieldType<"blocks.edit", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>, import("../../json-type").ObjectFieldType<"patches", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"seq", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>>]>, ObjectType<[import("../../json-type").ObjectFieldType<"patches", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"seq", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>>]>>>, import("../../json-type").ObjectFieldType<"blocks.remove", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>]>, ObjectType<[]>>>, import("../../json-type").ObjectFieldType<"blocks.get", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>]>, ObjectType<[import("../../json-type").ObjectFieldType<"block", import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>, import("../../json-type").ObjectFieldType<"seq", import("../../json-type").RefType<import("../../json-type").NumberType>>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"updated", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>, import("../../json-type").ObjectFieldType<"patches", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"seq", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>>]>>>, import("../../json-type").ObjectFieldType<"blocks.create", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").RefType<import("../../json-type").StringType>>, import("../../json-type").ObjectFieldType<"patches", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"seq", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"created", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"blob", import("../../json-type").BinaryType<import("../../json-type").AnyType>>]>>>>]>, ObjectType<[]>>>, import("../../json-type").ObjectFieldType<"presence.listen", import("../../json-type").FunctionStreamingType<ObjectType<[import("../../json-type").ObjectFieldType<"room", import("../../json-type").StringType>]>, ObjectType<[import("../../json-type").ObjectFieldType<"entries", import("../../json-type").ArrayType<import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").StringType>, import("../../json-type").ObjectFieldType<"lastSeen", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"validUntil", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"data", ObjectType<[]>>]>>>>, import("../../json-type").ObjectFieldType<"time", import("../../json-type").NumberType>]>>>, import("../../json-type").ObjectFieldType<"presence.remove", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"room", import("../../json-type").StringType>, import("../../json-type").ObjectFieldType<"id", import("../../json-type").StringType>]>, ObjectType<[]>>>, import("../../json-type").ObjectFieldType<"presence.update", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"room", import("../../json-type").StringType>, import("../../json-type").ObjectFieldType<"id", import("../../json-type").StringType>, import("../../json-type").ObjectFieldType<"data", import("../../json-type").AnyType>]>, ObjectType<[import("../../json-type").ObjectFieldType<"entry", import("../../json-type").RefType<ObjectType<[import("../../json-type").ObjectFieldType<"id", import("../../json-type").StringType>, import("../../json-type").ObjectFieldType<"lastSeen", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"validUntil", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"data", ObjectType<[]>>]>>>, import("../../json-type").ObjectFieldType<"time", import("../../json-type").NumberType>]>>>, import("../../json-type").ObjectFieldType<"pubsub.listen", import("../../json-type").FunctionStreamingType<ObjectType<[import("../../json-type").ObjectFieldType<"channel", import("../../json-type").StringType>]>, ObjectType<[import("../../json-type").ObjectFieldType<"message", import("../../json-type").AnyType>]>>>, import("../../json-type").ObjectFieldType<"pubsub.publish", import("../../json-type").FunctionType<ObjectType<[import("../../json-type").ObjectFieldType<"channel", import("../../json-type").StringType>, import("../../json-type").ObjectFieldType<"message", import("../../json-type").AnyType>]>, ObjectType<[]>>>, import("../../json-type").ObjectFieldType<"util.schema", import("../../json-type").FunctionType<import("../../json-type").AnyType, ObjectType<[import("../../json-type").ObjectFieldType<"typescript", import("../../json-type").StringType>]>>>, import("../../json-type").ObjectFieldType<"util.info", import("../../json-type").FunctionType<import("../../json-type").AnyType, ObjectType<[import("../../json-type").ObjectFieldType<"now", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"stats", ObjectType<[import("../../json-type").ObjectFieldType<"pubsub", ObjectType<[import("../../json-type").ObjectFieldType<"channels", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"observers", import("../../json-type").NumberType>]>>, import("../../json-type").ObjectFieldType<"presence", ObjectType<[import("../../json-type").ObjectFieldType<"rooms", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"entries", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"observers", import("../../json-type").NumberType>]>>, import("../../json-type").ObjectFieldType<"blocks", ObjectType<[import("../../json-type").ObjectFieldType<"blocks", import("../../json-type").NumberType>, import("../../json-type").ObjectFieldType<"patches", import("../../json-type").NumberType>]>>]>>]>>>, import("../../json-type").ObjectFieldType<"util.echo", import("../../json-type").FunctionType<import("../../json-type").AnyType, import("../../json-type").AnyType>>, import("../../json-type").ObjectFieldType<"util.ping", import("../../json-type").FunctionType<import("../../json-type").AnyType, import("../../json-type").ConstType<"pong">>>]>>;
