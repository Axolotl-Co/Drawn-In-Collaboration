import { ITimestampStruct } from '../../../json-crdt-patch/clock';
import type { Model } from '../../model';
import type { JsonNode, JsonNodeView } from '..';
import type { Printable } from '../../../util/print/types';
export declare class VecNode<Value extends JsonNode[] = JsonNode[]> implements JsonNode<JsonNodeView<Value>>, Printable {
    readonly doc: Model<any>;
    readonly id: ITimestampStruct;
    readonly elements: (ITimestampStruct | undefined)[];
    constructor(doc: Model<any>, id: ITimestampStruct);
    val(index: number): undefined | ITimestampStruct;
    get<Index extends number>(index: Index): undefined | Value[Index];
    put(index: number, id: ITimestampStruct): undefined | ITimestampStruct;
    private __extNode;
    ext(): JsonNode | undefined;
    isExt(): boolean;
    getExtId(): number;
    child(): JsonNode | undefined;
    container(): JsonNode | undefined;
    children(callback: (node: JsonNode) => void): void;
    private _view;
    view(): JsonNodeView<Value>;
    api: undefined | unknown;
    name(): string;
    toString(tab?: string): string;
}
